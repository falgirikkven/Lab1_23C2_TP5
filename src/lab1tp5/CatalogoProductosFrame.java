package lab1tp5;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Leonel
 */
public class CatalogoProductosFrame extends javax.swing.JFrame {

    private DefaultTableModel dtm;
    private ArrayList<Producto> listaProductos;

    /**
     * Creates new form CatalogoProductosFrame
     */
    public CatalogoProductosFrame() {
        initComponents();
        listaProductos = new ArrayList();
        dtm = (DefaultTableModel) jtTabla.getModel();
        // Datos para la tabla
        listaProductos.add(new Producto("Electrónica", "Celular", 599.99));
        listaProductos.add(new Producto("Electrónica", "Plancha", 79.99));
        listaProductos.add(new Producto("Ropa", "Remera", 24.99));
        listaProductos.add(new Producto("Ropa", "Pantalon", 19.99));
        listaProductos.add(new Producto("Alimentos", "Carne", 11.30));
        listaProductos.add(new Producto("Alimentos", "Verdura", 8.65));
        listaProductos.add(new Producto("Perfumeria", "Colonia", 31.99));
        listaProductos.add(new Producto("Perfumeria", "Desodorante", 11.49));
        actualizarTabla();
    }

    private void actualizarTabla() {
        String categoria = (String) jcbCategorias.getSelectedItem();
        dtm.setRowCount(0);
        for (Producto producto : listaProductos) {
            if (producto.getCategoria().equals(categoria)) {
                dtm.addRow(new Object[]{producto.getNombre(), producto.getPrecio()});
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlTitulo = new javax.swing.JLabel();
        jcbCategorias = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabla = new javax.swing.JTable();
        jbAgregarProducto = new javax.swing.JButton();
        jbQuitarProducto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlTitulo.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jlTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTitulo.setText("Catálogo de productos");

        jcbCategorias.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jcbCategorias.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Electrónica", "Ropa", "Alimentos", "Perfumeria" }));
        jcbCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCategoriasActionPerformed(evt);
            }
        });

        jtTabla.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jtTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descripción", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTabla.setToolTipText("");
        jtTabla.setName(""); // NOI18N
        jScrollPane1.setViewportView(jtTabla);

        jbAgregarProducto.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jbAgregarProducto.setText("Agregar");
        jbAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarProductoActionPerformed(evt);
            }
        });

        jbQuitarProducto.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jbQuitarProducto.setText("Quitar");
        jbQuitarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQuitarProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                    .addComponent(jlTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbAgregarProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbQuitarProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jcbCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAgregarProducto)
                    .addComponent(jbQuitarProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCategoriasActionPerformed
        actualizarTabla();
    }//GEN-LAST:event_jcbCategoriasActionPerformed

    private void jbAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarProductoActionPerformed
        String categoria = (String) jcbCategorias.getSelectedItem();
        JTextField jtfnombre = new JTextField();
        JTextField jtfPrecio = new JTextField();

        Object[] fields = {
            "Nombre", jtfnombre,
            "Precio (numero)", jtfPrecio};

        int opcion = JOptionPane.showConfirmDialog(this, fields, "Agregar producto al catálogo", JOptionPane.OK_OPTION);
        if (opcion != JOptionPane.OK_OPTION) {
            return;
        }
        String nombre = jtfnombre.getText();
        String precio = jtfPrecio.getText();
        if (nombre.isBlank() || precio.isBlank()) {
            JOptionPane.showMessageDialog(this, "No pueden haber campos vacíos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Producto producto = new Producto(categoria, nombre, Double.parseDouble(precio));
            listaProductos.add(producto);
            //System.out.println(producto.toString());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Se esperaban numeros en los campos.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error inesperado.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        actualizarTabla();
    }//GEN-LAST:event_jbAgregarProductoActionPerformed

    private void jbQuitarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbQuitarProductoActionPerformed
        int filaSeleccionada = jtTabla.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione cual fila quitar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String categoria = (String) jcbCategorias.getSelectedItem();
        String nombre = (String) jtTabla.getValueAt(filaSeleccionada, 0);
        Double precio = (Double) jtTabla.getValueAt(filaSeleccionada, 1);
        Producto p = null;
        for (Producto producto : listaProductos) {
            if (producto.getCategoria().equals(categoria) && producto.getNombre().equals(nombre) && producto.getPrecio() == precio) {
                p = producto;
            }
        }
        listaProductos.remove(p);
        actualizarTabla();
    }//GEN-LAST:event_jbQuitarProductoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void ejecutar() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CatalogoProductosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CatalogoProductosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CatalogoProductosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CatalogoProductosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CatalogoProductosFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAgregarProducto;
    private javax.swing.JButton jbQuitarProducto;
    private javax.swing.JComboBox jcbCategorias;
    private javax.swing.JLabel jlTitulo;
    private javax.swing.JTable jtTabla;
    // End of variables declaration//GEN-END:variables

}
